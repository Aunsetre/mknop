name: N1-OpenWrt-CI

on:
  schedule:
    - cron: '0 22 * * 5'
  repository_dispatch:
    types: run
    
env:
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-18.04
    if: github.event_name == 'schedule' || github.event.action == 'run'

    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Install depends
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /usr/lib/jvm /opt/ghc
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-1804)
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo timedatectl set-timezone "$TZ"

      - name: Clone Lean's openwrt
        run: |
          git clone https://github.com/coolsnowwolf/lede

      - name: Install feeds
        run: |
          cd lede
          
          git clone https://github.com/tuanqing/lede-mod
          git clone https://github.com/tuanqing/install-program package/install-program
          svn co https://github.com/Lienol/openwrt-package/trunk/lienol/luci-theme-bootstrap-mod package/luci-theme-bootstrap-mod

          git apply lede-mod/lede/*.patch
          
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          
          git apply lede-mod/luci/*.patch --directory=feeds/luci
          git apply lede-mod/bootstrap/*.patch --directory=package/luci-theme-bootstrap-mod

      - name: Make config
        run: |
          cd lede

          cat > .config <<EOF
          CONFIG_TARGET_armvirt=y
          CONFIG_TARGET_armvirt_64=y
          CONFIG_TARGET_armvirt_64_DEVICE_phicomm_n1=y
          CONFIG_BRCMFMAC_SDIO=y
          CONFIG_PACKAGE_luci-app-haproxy-tcp=y
          # CONFIG_UnblockNeteaseMusic_NodeJS is not set
          EOF

          make defconfig
          ./scripts/feeds update -a
          cat .config

      - name: Compile openwrt
        run: |
          cd lede
          make download -j8
          make -j$(nproc) || make -j1 V=s

      - name: Build firmware
        run: |
          cp lede/bin/targets/*/*/*.tar.gz ./openwrt
          sudo ./make -d
          
          cd out
          i=0
          for x in $(ls .); do
            cd $x
            filename=$(ls .)
            filename=${filename%.*}
            gzip *.img
            cd ../
            echo "::set-env name=firmware_$((++i))::$filename"
          done
      
          cp ../lede/.config ./config.seed

      - name: Upload firmware @ kernel 4.18.7
        uses: actions/upload-artifact@master
        with:
          name: ${{ env.firmware_1 }}
          path: out/4.18.7
      
      - name: Upload firmware @ kernel 4.19.106
        uses: actions/upload-artifact@master
        with:
          name: ${{ env.firmware_2 }}
          path: out/4.19.106
      
      - name: Upload firmware @ kernel 5.4.43
        uses: actions/upload-artifact@master
        with:
          name: ${{ env.firmware_3 }}
          path: out/5.4.43

      - name: Upload config file
        uses: actions/upload-artifact@master
        with:
          name: config
          path: out/config.seed
